Secode version 1.0 (C) 2021
Number of rules (primarily dangerous function names) in C/C++ ruleset: 223
Examining Vulnerable_3.c

FINAL RESULTS:

Vulnerable_3.c:9:  [4] (buffer) strcpy:
  Does not check for buffer overflows when copying to destination [MS-banned]
  (CWE-120).
  --------------------------------------------------------------------------
  [+] Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily
  misused).

Vulnerable_3.c:5:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120).
  --------------------------------------------------------------------------
  [+] Perform bounds checking, use functions that limit length, or ensure
  that the size is larger than the maximum possible length.

Vulnerable_3.c:7:  [1] (buffer) fscanf:
  It's unclear if the %s limit in the format string is small enough
  (CWE-120). Check that the limit is sufficiently small, or use a different
  input function.



=========================================================================
                          Your Code Report           
=========================================================================
ANALYSIS SUMMARY:

Hits = 3
Lines analyzed = 10 in approximately 0.01 seconds (1782 lines/second)
Physical Source Lines of Code (SLOC) = 8
Hits@level = [0]   1 [1]   1 [2]   1 [3]   0 [4]   1 [5]   0
Hits@level+ = [0+]   4 [1+]   3 [2+]   2 [3+]   1 [4+]   1 [5+]   0
Hits/KSLOC@level+ = [0+] 500 [1+] 375 [2+] 250 [3+] 125 [4+] 125 [5+]   0
Minimum risk level = 1
Not every hit is necessarily a security vulnerability.
There may be other security vulnerabilities; review your code!
=======================================================================
                       End of Code Analysis                 
=======================================================================
